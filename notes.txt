ardpy.py version 1.1.9
    deviceId를 uint16_t 로 맞춰서 변경
    
ardpy.py version 1.1.6
    Ardpy.__wait_until_cmd_handled(self) 함수 개선(__read_stat()함수와 통함)

ardpy.py version 1.1.5
    __CMD_SEND_BACK 의 경우에도 checksumd을 붙여서 전송하도록 수정
        실험결과 (master->slave) 전송은 거의 오류가 없고 그 반대에서 주로 오류가 발생한다.
        이렇게 변경한 이유는  데이터는 제대로 갔는데 단순히 다시 읽어오는데 오류가 발생한 경우에
        원데이터를 다시 보내지 않고 한 번 더 받아오도록 해서
        쓸데없는 재전송(master->slave)을 방지하기 위함이다.
        만약 체크썸도 이상이 없는데 원본과 다른 경우에만 원본을 다시 보낸다.
        이것으로 master<-slave 의 모든 경우에 checksum을 이용한다.
------------------------------------------------------------------------
Ardpy.h version 1.1.7
    deviceId를 uint32_t 에서 uint16_t 으로 축소함
        (최대 65,535면 너무 충분하다.)

Ardpy.h version 1.1.6
    checksum을 계산할 때 _CMD까지 고려하는 것을 제거한다.

Ardpy.h version 1.1.4
    <util/eeprom.h>대신 아두이노 라이브러리 "EEPROM.h"로 교체
        이로서 AVR계열의 아두이노 뿐만 아니라 모든 기종으로 사용이 가능해질 것으로 기대함
        
Ardpy.h version 1.1.3
    __CMD_SEND_BACK의 경우에도 checksumd을 붙여서 전송하도록 수정

Ardpy.h version 1.1.2
    _VER(a,b,c) 매크로를 정의하여 버전에서 uint16_t 데이터를 계산
    Ardpy.h와 (user)firmware의 버전을 따로 전송하도록 _S_Id 구조를 변경(추가)
    Ardpy.check()함수의 세 번째 인수를 firmware 버전으로 설정 가능(default=1.0.0)
    
Ardpy.h version 1.1.0
    Ardpy.check()를 loop() 함수 내에서 사용자가 호출하도록 수정
        이유는 여기에서 사용자 등록 함수가 호출되는데 시간이 많이 걸릴 수 있으므로
    ISR내에서 호출하기는 무리이기 때문이다.
    ISR은 최대한 간단하게(수행를 빠르게 하기 위해서) 작성하는 것이 좋다는 기조를 유지해야 한다.
